{"version":3,"sources":["components/auth/AuthForm.module.css","components/auth/AuthForm.js","pages/AuthPage.js"],"names":["module","exports","AuthForm","history","useHistory","useState","showPassword","setShowPassword","authCtx","useContext","AuthContext","emailInputRef","useRef","passwordInputRef","isLoading","setIsLoading","className","classes","auth","onSubmit","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","headers","then","res","ok","json","data","errorMessage","error","message","Error","experationTime","Date","getTime","login","token","_id","role","cycleid","toISOString","replace","catch","err","alert","control","htmlFor","type","id","required","ref","onClick","actions","push","AuthPage"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,2B,+FC6GlHC,EAxGE,WACf,IAAMC,EAAUC,cAEhB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAUC,qBAAWC,KAErBC,EAAgBC,mBAChBC,EAAmBD,mBAEzB,EAAkCP,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAiEA,OACE,0BAASC,UAAWC,IAAQC,KAA5B,UACE,uCACA,uBAAMC,SA7De,SAACC,GACxBA,EAAMC,iBAEN,IAAMC,EAAeX,EAAcY,QAAQC,MACrCC,EAAkBZ,EAAiBU,QAAQC,MAEjDT,GAAa,GAKbW,MAFM,sDAEK,CACTC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAOT,EACPU,SAAUP,IAEZQ,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAEL,OADApB,GAAa,GACToB,EAAIC,GACCD,EAAIE,OAEJF,EAAIE,OAAOH,MAAK,SAACI,GACtB,IAAIC,EAAe,wBAKnB,MAJID,GAAQA,EAAKE,OAASF,EAAKE,MAAMC,UACnC1B,GAAa,GACbwB,EAAeD,EAAKE,MAAMC,SAEtB,IAAIC,MAAMH,SAIrBL,MAAK,SAACI,GACL,IAAMK,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvDrC,EAAQsC,MACNR,EACAb,EACAa,EAAKS,MACLT,EAAKU,IACLV,EAAKW,KACLX,EAAKY,QACLP,EAAeQ,eAEjBhD,EAAQiD,QAAQ,QAEjBC,OAAM,SAACC,GACNC,MAAMD,EAAIb,aAWZ,UACE,sBAAKzB,UAAWC,IAAQuC,QAAxB,UACE,uBAAOC,QAAQ,QAAf,wBACA,uBAAOC,KAAK,WAAWC,GAAG,WAAWC,UAAQ,EAACC,IAAKlD,OAErD,sBAAKK,UAAWC,IAAQuC,QAAxB,UACE,uBAAOC,QAAQ,WAAf,2BACA,uBACEC,KAAMpD,EAAe,OAAS,WAC9BqD,GAAG,WACHC,UAAQ,EACRC,IAAKhD,OAGT,uBAAO6C,KAAK,WAAWI,QAhFF,WACrBxD,GAAcC,GAAgB,GAC7BD,GAAcC,GAAgB,MAgEjC,iBAeE,sBAAKS,UAAWC,IAAQ8C,QAAxB,WACIjD,GAAa,2CACdA,GAAa,0DAGlB,qBAAKE,UAAWC,IAAQ8C,QAAxB,SACE,wBAAQD,QA5BQ,WACpB3D,EAAQ6D,KAAK,YA2BT,4BC9FOC,UARE,WACf,OACE,mCACE,cAAC,EAAD","file":"static/js/4.a597d631.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__2ZSKH\",\"control\":\"AuthForm_control__1evQ4\",\"actions\":\"AuthForm_actions__25Vmz\",\"toggle\":\"AuthForm_toggle__1Wxr6\"};","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n\n    let url;\n    url = 'https://cycle-renter.azurewebsites.net//users/login'; //login send req url\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication Failed';\n            if (data && data.error && data.error.message) {\n              setIsLoading(false);\n              errorMessage = data.error.message;\n            }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const experationTime = new Date(new Date().getTime() + +36000000);\n        authCtx.login(\n          data,\n          enteredPassword,\n          data.token,\n          data._id,\n          data.role,\n          data.cycleid,\n          experationTime.toISOString()\n        );\n        history.replace('/');\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  const signupHandler = () => {\n    history.push('/signup');\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>Login</h1>\n      <form onSubmit={submitionHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"userName\" id=\"userName\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <input type=\"checkbox\" onClick={toggleShowPassword} /> Show Password\n        <div className={classes.actions}>\n          {!isLoading && <button>Login</button>}\n          {isLoading && <p>Sending Request....</p>}\n        </div>\n      </form>\n      <div className={classes.actions}>\n        <button onClick={signupHandler}> Sign Up</button>\n      </div>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/auth/AuthForm';\n\nconst AuthPage = () => {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n};\n\nexport default AuthPage;\n"],"sourceRoot":""}