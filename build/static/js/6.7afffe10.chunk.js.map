{"version":3,"sources":["components/auth/AddStudentForm.module.css","components/auth/AddStudentForm.js","pages/Signup.js"],"names":["module","exports","AddStudentForm","props","authCtx","useContext","AuthContext","passwordRef","useRef","useState","showPassword","setShowPassword","isLoading","setIsLoading","useHttp","addStudent","sendRequest","status","error","className","LoadingSpinner","classes","auth","onSubmit","event","preventDefault","student","name","user","given_name","rollno","email","substring","branch","role","password","current","value","token","control","htmlFor","type","id","required","readOnly","ref","onClick","actions","Signup","initialSignup","setInitialSignup","setUser","useEffect","google","accounts","initialize","client_id","callback","handleCallbackResponse","renderButton","document","getElementById","theme","size","response","userObject","jwt_decode","credential","includes","alert","Error"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,OAAS,iC,sHC0HpIC,EAlHQ,SAACC,GACtB,IAAMC,EAAUC,qBAAWC,KACrBC,EAAcC,mBAEpB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAAuCC,YAAQC,KAAY,GAAnDC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,MAS7B,GAAe,YAAXD,EACF,OACE,qBAAKE,UAAU,WAAf,SACE,cAACC,EAAA,EAAD,MAIN,GAAIF,EACF,OAAO,mBAAGC,UAAU,WAAb,SAAyBD,IA2BlC,OACE,0BAASC,UAAWE,IAAQC,KAA5B,UACE,6CACA,uBAAMC,SA3Be,SAACC,GACxBA,EAAMC,iBACNZ,GAAa,GACbG,EAAY,CACVU,QAAS,CACPC,KAAMxB,EAAMyB,KAAKC,WACjBC,OAAQ3B,EAAMyB,KAAKG,MAAMC,UAAU,EAAG,GACtCC,OAAQ9B,EAAMyB,KAAKG,MAAMC,UAAU,EAAG,GACtCE,KAAM,UACNH,MAAO5B,EAAMyB,KAAKG,MAClBI,SAAU5B,EAAY6B,QAAQC,OAEhCC,MAAOlC,EAAQkC,QAEjBzB,GAAa,IAaX,UACE,sBAAKM,UAAWE,IAAQkB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,0BACA,uBACEC,KAAK,OACLC,GAAG,OACHC,UAAQ,EACRN,MAAOlC,EAAMyB,KAAKC,WAClBe,UAAQ,OAuBZ,sBAAKzB,UAAWE,IAAQkB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBACEC,KAAK,WACLC,GAAG,WACHC,UAAQ,EACRN,MAAOlC,EAAMyB,KAAKG,MAClBa,UAAQ,OAGZ,sBAAKzB,UAAWE,IAAQkB,QAAxB,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBACEC,KAAM/B,EAAe,OAAS,WAC9BgC,GAAG,WACHC,UAAQ,EACRE,IAAKtC,OAGT,uBAAOkC,KAAK,WAAWK,QA7FF,WACrBpC,GAAcC,GAAgB,GAC7BD,GAAcC,GAAgB,MAyCjC,iBAmDE,sBAAKQ,UAAWE,IAAQ0B,QAAxB,WACInC,GAAa,oDACdA,GAAa,8DC/DToC,UAjDA,WACb,MAA0CvC,oBAAS,GAAnD,mBAAOwC,EAAP,KAAsBC,EAAtB,KACA,EAAwBzC,mBAAS,IAAjC,mBAAOmB,EAAP,KAAauB,EAAb,KAEAC,qBAAU,WAERC,OAAOC,SAASZ,GAAGa,WAAW,CAC5BC,UACE,2EACFC,SAAUC,IAGZL,OAAOC,SAASZ,GAAGiB,aAAaC,SAASC,eAAe,aAAc,CACpEC,MAAO,UACPC,KAAM,aAGV,IAAML,EAAyB,SAACM,GAC9B,IAAIC,EAAaC,YAAWF,EAASG,YAIrC,IAAIF,EAAWlC,MAAMqC,SAAS,eAO5B,MADAC,MAAM,iBACAC,MAAM,iBANZnB,EAAQc,GAGRf,GAAiB,IAOrB,OACE,iCACID,GACA,qBAAK9B,UAAU,WAAf,SACE,qBAAKuB,GAAG,gBAGXO,GACC,8BACE,cAAC,EAAD,CAAgBrB,KAAMA","file":"static/js/6.7afffe10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AddStudentForm_auth__h7mok\",\"control\":\"AddStudentForm_control__2g9qK\",\"actions\":\"AddStudentForm_actions__u4M92\",\"toggle\":\"AddStudentForm_toggle__29Mvf\"};","import { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\n\nimport useHttp from '../hooks/use-http';\nimport { addStudent } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './AddStudentForm.module.css';\n\nconst AddStudentForm = (props) => {\n  const authCtx = useContext(AuthContext);\n  const passwordRef = useRef();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { sendRequest, status, error } = useHttp(addStudent, false);\n\n  // console.log(JSON.stringify(props.user));\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    sendRequest({\n      student: {\n        name: props.user.given_name,\n        rollno: props.user.email.substring(0, 9),\n        branch: props.user.email.substring(5, 7),\n        role: 'student',\n        email: props.user.email,\n        password: passwordRef.current.value,\n      },\n      token: authCtx.token,\n    });\n    setIsLoading(false);\n    // console.log({\n    //   name: nameRef.current.value,\n    //   rollno: rollnoRef.current.value,\n    //   branch: branchRef.current.value,\n    //   email: emailRef.current.value,\n    //   role: 'student',\n    //   password: passwordRef.current.value,\n    // });\n  };\n  return (\n    <section className={classes.auth}>\n      <h1>Add Student</h1>\n      <form onSubmit={submitionHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"Name\">Student Name</label>\n          <input\n            type=\"Name\"\n            id=\"Name\"\n            required\n            value={props.user.given_name}\n            readOnly\n          />\n        </div>\n        {/* <div className={classes.control}>\n          <label htmlFor=\"rollno\">Student Roll Number</label>\n          <input\n            type=\"rollno\"\n            id=\"rollno\"\n            required\n            value={props.user.email.substring(0, 9)}\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"branch\">Branch</label>\n          <input\n            type=\"branch\"\n            id=\"branch\"\n            required\n            value={props.user.email.substring(5, 7)}\n            readOnly\n          />\n        </div> */}\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"userName\"\n            id=\"userName\"\n            required\n            value={props.user.email}\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            required\n            ref={passwordRef}\n          />\n        </div>\n        <input type=\"checkbox\" onClick={toggleShowPassword} /> Show Password\n        <div className={classes.actions}>\n          {!isLoading && <button>Create Account</button>}\n          {isLoading && <p>Sending Request....</p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AddStudentForm;\n","import { useEffect, useState } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport AddStudentForm from '../components/auth/AddStudentForm';\n\nconst Signup = () => {\n  const [initialSignup, setInitialSignup] = useState(false);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    /* global google */\n    google.accounts.id.initialize({\n      client_id:\n        '622560773772-iifqp88cithvc1osdp9d03126cvv0d9s.apps.googleusercontent.com',\n      callback: handleCallbackResponse,\n    });\n\n    google.accounts.id.renderButton(document.getElementById('signupDiv'), {\n      theme: 'outline',\n      size: 'large',\n    });\n  });\n  const handleCallbackResponse = (response) => {\n    var userObject = jwt_decode(response.credential);\n    // document.getElementById('signupDiv').hidden = true;\n    // console.log(userObject);\n\n    if (userObject.email.includes('@hbtu.ac.in')) {\n      setUser(userObject);\n      // console.log(user);\n\n      setInitialSignup(true);\n    } else {\n      alert('Not a HBTU Id');\n      throw Error('Not a HBTU Id');\n    }\n  };\n\n  return (\n    <div>\n      {!initialSignup && (\n        <div className=\"centered\">\n          <div id=\"signupDiv\"></div>\n        </div>\n      )}\n      {initialSignup && (\n        <div>\n          <AddStudentForm user={user} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Signup;\n"],"sourceRoot":""}